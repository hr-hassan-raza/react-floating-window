{"version":3,"sources":["App.js","index.js"],"names":["App","useState","isOpen","setIsOpen","toggleModal","Container","onClick","onRequestClose","contentLabel","style","overlay","position","top","left","right","bottom","backgroundColor","padding","content","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","paddingLeft","height","marginLeft","marginRight","type","placeholder","Button","Modal","setAppElement","styled","div","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAMe,SAASA,IACtB,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,SAASC,IACPD,GAAWD,GAGb,OACE,eAACG,EAAD,WACE,wBAAQC,QAASF,EAAjB,kCACA,eAAC,IAAD,CACEF,OAAQA,EACRK,eAAgBH,EAChBI,aAAa,YACbC,MAAO,CACLC,QAAS,CACPC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,gBAAiB,4BACjBC,QAAS,QAEXC,QAAS,CACPP,SAAU,WACVC,IAAK,QACLC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRI,OAAQ,iBACRC,WAAY,OACZC,SAAU,SACVC,wBAAyB,QACzBC,aAAc,MACdC,QAAS,OACTC,YAAa,QACbC,OAAQ,QACRC,WAAY,QACZC,YAAa,UA7BnB,UAiCE,qDACA,iEACA,+BACE,gCACE,uBAAOC,KAAK,OAAOC,YAAY,kBAGnC,cAACC,EAAD,CAAQzB,QAASF,EAAjB,wBAnDR4B,IAAMC,cAAc,SAwDpB,IAAM5B,EAAY6B,IAAOC,IAAV,2bAoBTJ,EAASG,IAAOC,IAAV,6TC3EZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d9d5558e.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport styled from \"styled-components\";\nModal.setAppElement(\"#root\");\n\nexport default function App() {\n  const [isOpen, setIsOpen] = useState(false);\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  return (\n    <Container>\n      <button onClick={toggleModal}>Open Floating Window</button>\n      <Modal\n        isOpen={isOpen}\n        onRequestClose={toggleModal}\n        contentLabel=\"My dialog\"\n        style={{\n          overlay: {\n            position: \"relative\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: \"rgba(255, 255, 255, 0.75)\",\n            padding: \"40px\",\n          },\n          content: {\n            position: \"absolute\",\n            top: \"-70px\",\n            left: \"40px\",\n            right: \"40px\",\n            bottom: \"40px\",\n            border: \"5px solid #ccc\",\n            background: \"#fff\",\n            overflow: \"hidden\",\n            WebkitOverflowScrolling: \"touch\",\n            borderRadius: \"4px\",\n            outline: \"none\",\n            paddingLeft: \"200px\",\n            height: \"120px\",\n            marginLeft: \"300px\",\n            marginRight: \"300px\",\n          },\n        }}\n      >\n        <div>Change Task Limit.</div>\n        <p>Change user's monthly task limit</p>\n        <form>\n          <label>\n            <input type=\"text\" placeholder=\"1,000,000\"></input>\n          </label>\n        </form>\n        <Button onClick={toggleModal}>Save</Button>\n      </Modal>\n    </Container>\n  );\n}\nconst Container = styled.div`\n  text-align: center;\n  padding: 100px;\n  button {\n    width: 25%;\n    background-color: rgba(217, 217, 68, 1);\n    font-weight: blod;\n    padding: 17px 0;\n    color: rgba(17, 17, 17, 1);\n    border-radius: 4px;\n    text-align: center;\n    font-size: 18px;\n    cursor: pointer;\n    transition: all 250ms;\n    letter-spacing: 1.5px;\n    &:hover {\n      background: rgba(255, 255, 18, 1);\n    }\n  }\n`;\nconst Button = styled.div`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n  width: 10%;\n  height: 10%;\n  background-color: rgba(36, 190, 60, 1);\n  font-weight: blod;\n  color: rgba(17, 17, 17, 1);\n  border-radius: 4px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 250ms;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}